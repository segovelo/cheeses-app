{"version":3,"sources":["images/cheese.jpg","cheese-names.js","scrollArrow.js","images/avatar.png","App.js","reportWebVitals.js","index.js"],"names":["cheese_names_array","ScrollArrow","useState","showScroll","setShowScroll","window","addEventListener","pageYOffset","className","onClick","scrollTo","top","behavior","style","display","CheeseCard","props","React","show","setShow","name","src","image","onError","e","target","onerror","cheeseImg","alt","description","App","cheeses","setCheeses","selected","setSelected","url","useEffect","fetch","then","response","json","data","console","log","catch","letter","letters","split","links","map","push","concat","id","prof_pic","width","height","to","indexOf","options","onSelect","cheese","optionColor","optionStyles","size","background","textStyles","wrapperStyles","padding","margin","toLowerCase","join","substring","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c63fa916.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cheese.4fe1fbba.jpg\";","const cheese_names_array = ['Abbaye de Belloc', 'Abbaye du Mont des Cats', \r\n                          'Abertam', 'Abondance', 'Ackawi', 'Acorn', \r\n                          'Adelost', 'Affidelice au Chablis', 'Airag', \r\n                          'Airedale', 'Aisy Cendre', 'Allgauer Emmentaler',\r\n                           'Alverca', 'Ambert', 'American Cheese', 'Ami du Chambertin', \r\n                           'Anejo Enchilado', 'Anneau du Vic-Bilh', 'Anthoriro', 'Aragon', \r\n                           'Ardi Gasna', 'Ardrahan', 'Aromes au Gene de Marc', 'Asadero', \r\n                           'Asiago', 'Aubisque Pyrenees', 'Autun', 'Avaxtskyr', 'Baby Swiss',\r\n                            'Babybel', 'Baguette Laonnaise', 'Bakers', 'Baladi', 'Balaton', \r\n                            'Bandal', 'Banon', 'Basing', 'Basket Cheese', 'Bath Cheese', \r\n                            'Bavarian Bergkase', 'Baylough', 'Beauvoorde', 'Beenleigh Blue', \r\n                            'Beer Cheese', 'Bel Paese', 'Bergader', 'Bergere Bleue', 'Berkswell', \r\n                            'Beyaz Peynir', 'Bierkase', 'Bishop Kennedy', 'Bleu de Laqueuille', \r\n                            'Bleu Des Causses', 'Blue Castello', 'Blue Rathgore', 'Bocconcini', \r\n                            'Boeren Leidenkaas', 'Bonchester', 'Bosworth', 'Bougon', 'Boule Du Roves',\r\n                            'Boursault', 'Boursin', 'Bouyssou', 'Bra', 'Braudostur', 'Breakfast Cheese', \r\n                            'Brebis du Lavort', 'Brebis du Puyfaucon', 'Bresse Bleu', 'Brick', 'Brie', \r\n                            'Brie de Meaux', 'Brie de Melun', 'Brillat-Savarin', 'Brin', \r\n                            'Briquette de Brebis', 'Briquette du Forez', 'Broccio', 'Brousse du Rove', \r\n                            'Bruder Basil', 'Bryndza', 'Buffalo', 'Burgos', 'Butte', 'Butterkase', \r\n                            'Buxton Blue', 'Cabecou', 'Caboc', 'Cabrales', 'Cachaille', 'Caciocavallo', \r\n                            'Caciotta', 'Caerphilly', 'Cairnsmore', 'Calenzana', 'Cambazola',\r\n                             'Camembert de Normandie', 'Canadian Cheddar', 'Canestrato', 'Cantal',\r\n                              'Caprice des Dieux', 'Capriole Banon', 'Casciotta di Urbino', 'Cashel Blue', \r\n                              'Castelmagno', 'Castelo Branco', 'Castigliano', 'Cathelain', 'Celtic Promise',\r\n                               'Cerney', 'Chabichou du Poitou', 'Chabis de Gatine', 'Chaource', \r\n                               'Charolais', 'Chaumes','Cheddar', 'Cheddar Clothbound', 'Cheshire', 'Chevres', \r\n                             'Chevrotin des Aravis', 'Chontaleno', 'Civray', 'Coeur de Camembert au Calvados', \r\n                             'Coeur de Chevre', 'Colby', 'Cold Pack', 'Comte', 'Coolea', 'Cooleney', \r\n                             'Coquetdale', 'Corleggy', 'Cornish Pepper', 'Cotherstone', 'Cotija', \r\n                             'Cottage Cheese', 'Cougar Gold', 'Coulommiers', 'Coverdale', 'Crayeux de Roncq', \r\n                             'Cream Cheese', 'Cream Havarti', 'Crema Agria', 'Crema Mexicana', 'Crescenza', \r\n                             'Croghan', 'Crottin de Chavignol', 'Crottin du Chavignol', 'Crowdie', 'Crowley', \r\n                             'Cuajada', 'Curd', 'Cure Nantais', 'Curworthy', 'Cwmtawe Pecorino', \r\n                             'Cypress Grove Chevre', 'Danbo', 'Danish Fontina', 'Daralagjazsky', 'Dauphin',\r\n                              'Delice des Fiouves', 'Denhany Dorset Drum', 'Derby', 'Dessertnyj Belyj',\r\n                               'Devon Blue', 'Devon Garland', 'Dolcelatte', 'Doolin', 'Doppelrhamstufel', \r\n                               'Dorset Blue Vinney', 'Double Gloucester', 'Double Worcester', 'Dreux a la Feuille', \r\n                               'Dry Jack', 'Duddleswell', 'Dunbarra', 'Dunlop', 'Dunsyre Blue', 'Duroblando', \r\n                               'Durrus', 'Edelpilz', 'Emental Grand Cru', 'Emlett', 'Emmental', 'Epoisses de Bourgogne', \r\n                               'Esbareich', 'Esrom', 'Etorki', 'Evansdale Farmhouse Brie', 'Exmoor Blue', \r\n                               'Explorateur', 'Feta', 'Figue', 'Filetta', 'Fin-de-Siecle', 'Finn', 'Fiore Sardo', \r\n                               'Fleur du Maquis', 'Flor de Guia', 'Flower Marie', 'Folded', 'Folded cheese with mint', \r\n                               'Fondant de Brebis', 'Fontainebleau', 'Fontal', 'Formaggio di capra', 'Fougerus', \r\n                               'Four Herb Gouda', 'Fourme de Haute Loire', 'Fourme de Montbrison', 'Fresh Jack', 'Fresh Mozzarella', 'Fresh Ricotta', 'Fresh Truffles', 'Fribourgeois', 'Friesekaas', 'Friesian', 'Friesla', 'Frinault', 'Fromage a Raclette', 'Fromage Corse', 'Fromage de Montagne de Savoie', 'Fromage Frais', 'Fruit Cream Cheese', 'Frying Cheese', 'Fynbo', 'Galette du Paludier', 'Galette Lyonnaise', 'Gammelost', 'Garrotxa', 'Gastanberra', 'Geitost', 'Gippsland Blue', 'Gjetost', 'Gloucester', 'Golden Cross', 'Gorgonzola', 'Gornyaltajski', 'Gospel Green', 'Gouda', 'Goutu', 'Gowrie', 'Grabetto', 'Graddost', 'Grafton Village Cheddar', 'Grana', 'Grana Padano', 'Grand Vatel', 'Gratte-Paille', 'Graviera', 'Greuilh', 'Greve', 'Gris de Lille', 'Gruyere', 'Gubbeen', 'Guerbigny', 'Halloumi', 'Haloumi-Style Cheese', 'Harbourne Blue', 'Havarti', 'Heidi Gruyere', 'Hereford Hop', 'Herrgardsost', 'Herriot Farmhouse', 'Herve', 'Hipi Iti', 'Hubbardston Blue Cow', 'Hushallsost', 'Idaho Goatster', 'Idiazabal', 'Il Boschetto al Tartufo', 'Isle of Mull', 'Jarlsberg', 'Jermi Tortes', 'Jibneh Arabieh', 'Jindi Brie', 'Jubilee Blue', 'Juustoleipa', 'Kadchgall', 'Kaseri', 'Kashta', 'Kefalotyri', 'Kenafa', 'Kernhem', 'Kervella Affine', 'Kikorangi', 'King Island Cape Wickham Brie', 'King River Gold', 'Klosterkaese', 'Kugelkase', 'La Taupiniere', 'La Vache Qui Rit', 'Laguiole', 'Lairobell', 'Lajta', 'Lanark Blue', 'Lancashire', 'Langres', 'Lappi', 'Laruns', 'Lavistown', 'Le Brin', 'Le Fium Orbo', 'Le Lacandou', 'Le Roule', 'Leafield', 'Lebbene', 'Leerdammer', 'Leicester', 'Leyden', 'Limburger', 'Lincolnshire Poacher', 'Liptauer', 'Little Rydings', 'Livarot', 'Llanboidy', 'Llanglofan Farmhouse', 'Loch Arthur Farmhouse', 'Loddiswell Avondale', 'Longhorn', 'Lou Palou', 'Lou Pevre', 'Lyonnais', 'Maasdam', 'Macconais', 'Mahoe Aged Gouda', 'Mahon', 'Malvern', 'Mamirolle', 'Manchego', 'Manouri', 'Manur', 'Marble Cheddar', 'Marbled Cheeses', 'Maredsous', 'Margotin', 'Maribo', 'Maroilles', 'Mascares', 'Mascarpone', 'Mascarpone Torta', 'Matocq', 'Maytag Blue', 'Meira', 'Menallack Farmhouse', 'Menonita', 'Meredith Blue', 'Mesost', 'Meyer Vintage Gouda', 'Mihalic Peynir', 'Milleens', 'Mine-Gabhar', 'Molbo', 'Monastery Cheeses', 'Mondseer', 'Montasio', 'Monterey Jack', 'Morbier', 'Morbier Cru de Montagne', 'Mothais a la Feuille', 'Mozzarella', 'Mozzarella (Australian)', 'Mozzarella di Bufala', 'Mozzarella Fresh, in water', 'Mozzarella Rolls', 'Munster', 'Murol', 'Mycella', 'Myzithra', 'Naboulsi', 'Nantais', 'Neufchatel', 'Niolo', 'Nokkelost', 'Northumberland', 'Oaxaca', 'Olde York', 'Olivet au Foin', 'Olivet Bleu', 'Olivet Cendre', 'Orkney Extra Mature Cheddar', 'Orla', 'Oschtjepka', 'Ossau Fermier', 'Ossau-Iraty', 'Oszczypek', 'Oxford Blue', 'Palet de Babligny', 'Paneer', 'Panela', 'Pannerone', 'Pant ys Gawn', 'Parmigiano Reggiano', 'Passendale', 'Pasteurized Processed', 'Pate de Fromage', 'Patefine Fort', 'Pave de Chirac', 'Pecorino', 'Pecorino in Walnut Leaves', 'Pecorino Romano', 'Peekskill Pyramid', 'Pelardon des Cevennes', 'Pelardon des Corbieres', 'Penamellera', 'Penbryn', 'Pencarreg', 'Perail de Brebis', 'Petit Pardou', 'Petit-Suisse', 'Picodon de Chevre', 'Picos de Europa', 'Piora', 'Pithtviers au Foin', 'Plateau de Herve', 'Plymouth Cheese', 'Podhalanski', 'Polkolbin', 'Port Nicholson', 'Port-Salut', 'Postel', 'Pouligny-Saint-Pierre', 'Pourly', 'Prastost', 'Pressato', 'Prince-Jean', 'Processed Cheddar', 'Provolone', 'Pyengana Cheddar', 'Pyramide', 'Quark', 'Quartirolo Lombardo', 'Quatre-Vents', 'Quercy Petit', 'Queso Blanco', 'Queso de Murcia', 'Queso del Montsec', 'Queso del Tietar', 'Queso Fresco', 'Queso Iberico', 'Queso Jalapeno', 'Queso Media Luna', 'Queso Para Frier', 'Queso Quesadilla', 'Rabacal', 'Ragusano', 'Raschera', 'Reblochon', 'Red Leicester', 'Regal de la Dombes', 'Reggianito', 'Remedou', 'Requeson', 'Richelieu', 'Ricotta Salata', 'Ridder', 'Rigotte', 'Rocamadour', 'Rollot', 'Romano', 'Romans Part Dieu', 'Roncal', 'Roquefort', 'Roule', 'Rouleau De Beaulieu', 'Royalp Tilsit', 'Rubens', 'Rustinu', 'Saaland Pfarr', 'Saanenkaese', 'Saga', 'Sage Derby', 'Sainte Maure', 'Saint-Marcellin', 'Saint-Nectaire', 'Saint-Paulin', 'Salers', 'Samso', 'Sancerre', 'Sap Sago', 'Sardo', 'Sardo Egyptian', 'Sbrinz', 'Scamorza', 'Schabzieger', 'Schloss', 'Selles sur Cher', 'Selva', 'Serat', 'Seriously Strong Cheddar', 'Serra da Estrela', 'Sharpam', 'Shelburne Cheddar', 'Shropshire Blue', 'Siraz', 'Sirene', 'Smoked Gouda', 'Somerset Brie', 'Sonoma Jack', 'Soumaintrain', 'Sourire Lozerien', 'Spenwood', 'Sraffordshire Organic', 'Stilton', 'Stinking Bishop', 'String', 'Sussex Slipcote', 'Sveciaost', 'Swaledale', 'Sweet Style Swiss', 'Swiss', 'Tala', 'Taleggio', 'Tamie', 'Tasmania Highland Chevre Log', 'Taupiniere', 'Teifi', 'Telemea', 'Tete de Moine', 'Tetilla', 'Texas Goat Cheese', 'Tibet', 'Tillamook Cheddar', 'Tilsit', 'Timboon Brie', 'Toma', 'Tomme Brulee', 'Tomme de Chevre', 'Tomme de Romans', 'Tomme de Savoie', 'Tomme des Chouans', 'Tommes', 'Torta del Casar', 'Toscanello', 'Tourmalet', 'Tronchon', 'Trou du Cru', 'Tupi', 'Turunmaa', 'Tymsboro', 'Tyn Grug', 'Tyning', 'Ubriaco', 'Ulloa', 'Vacherin-Fribourgeois', 'Valencay', 'Vasterbottenost', 'Venaco', 'Vendomois', 'Vieux Corse', 'Vignotte', 'Vulscombe', 'Waimata Farmhouse Blue', 'Waterloo', 'Weichkaese', 'Wellington', 'Wensleydale', 'Whitestone Farmhouse', 'Wigmore', 'Woodside Cabecou', 'Xynotyro', 'Yarra Valley Pyramid', 'Yorkshire Blue', 'Zamorano', 'Zanetti Grana Padano', 'Zanetti Parmigiano Reggiano'];\r\n\r\n  export default cheese_names_array;                             ","import React, {useState} from 'react';\r\nimport {FaArrowCircleUp} from 'react-icons/fa';\r\nimport {RiArrowUpCircleFill} from 'react-icons/ri';\r\nimport {FcUp} from 'react-icons/fc';\r\nimport {ImArrowUp} from 'react-icons/im';\r\nimport './scrollArrow.css';\r\n\r\nconst ScrollArrow = () =>{\r\n\r\n  const [showScroll, setShowScroll] = useState(false)\r\n\r\n  const checkScrollTop = () => {\r\n    if (!showScroll && window.pageYOffset > 200){\r\n      setShowScroll(true)\r\n    } else if (showScroll && window.pageYOffset <= 200){\r\n      setShowScroll(false)\r\n    }\r\n  };\r\n\r\n  const scrollTop = () =>{\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n  };\r\n\r\n  window.addEventListener('scroll', checkScrollTop)\r\n\r\n  return (\r\n        <FaArrowCircleUp className=\"scrollTop\" onClick={scrollTop} style={{display: showScroll ? 'flex' : 'none'}}/>\r\n  );\r\n}\r\n\r\nexport default ScrollArrow;","export default __webpack_public_path__ + \"static/media/avatar.2be75ce8.png\";","import React,{ useState } from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport PText from 'react-predictive-text';\r\nimport cheeseImg from './images/cheese.jpg';\r\nimport { BrowserRouter} from 'react-router-dom';\r\nimport cheese_names_array from './cheese-names';\r\nimport ScrollArrow from './scrollArrow';\r\nimport prof_pic from \"./images/avatar.png\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.css';\r\nimport './website.css';\r\n\r\nconst App = () => {\r\n  const [cheeses, setCheeses]= React.useState([]);\r\n  const [selected, setSelected]= React.useState('');\r\n  const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n  //const url = \"https://9ofhfkvsec.execute-api.us-east-2.amazonaws.com/latest/cheeses\";\r\n  const url = \"https://ifv3jtog27.execute-api.us-east-2.amazonaws.com/latest/latest/cheeses\"\r\n  React.useEffect( () => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setCheeses(data);\r\n      })\r\n      .catch(() => console.log(\"Can’t access \" + url + \" response. Blocked by browser?\"));\r\n   }, []  );  // Notice the dependecy array\r\n    \r\n\r\n  let letter = '';\r\n  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\r\n  const links = [];\r\n  letters.map(letter => (\r\n        links.push('/#'.concat(letter)) \r\n  ));  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div id=\"container\">\r\n      <ScrollArrow/>\r\n       <header>  {/*<!-- Header element -->  */}\r\n         <img id=\"prof_pic\" src={prof_pic} alt=\"Profile photo of Sebastian\" width=\"150\" height=\"150\"/>\r\n         <div id=\"divHeader\"><h1>Segovelo Cheese App</h1></div>\r\n       </header> {/* <!-- ****************  End of \"header\" *************  --> */}\r\n\r\n\r\n    <div className='outer-container'>\r\n    <div className=\"inner-container\">\r\n       \r\n    <div  className=\"div-links\">\r\n      \r\n      { letters.map( letter => (\r\n            <Link to ={links[letters.indexOf(letter)]} className=\"link-letters\">{letter}</Link>\r\n        ))\r\n      }\r\n     \r\n    </div>\r\n\r\n\r\n\r\n    <div className=\"div-cheese-search\">\r\n     <div className=\"div-predictive-text\">       \r\n        <PText \r\n          options = {cheese_names_array}          \r\n          onSelect={(cheese) => setSelected(cheese) }          \r\n          optionColor={'#95C8D8'}\r\n          optionStyles={{size : '20px', background:'#ffffff'}}\r\n          textStyles = {{ width: '100px'}}\r\n          wrapperStyles={{padding:'5px', margin:'3px',\r\n                          display:'block'\r\n                }}        \r\n        />\r\n        </div>\r\n        <div className=\"div-search-button\">\r\n        \r\n        <Link to = {'/#'.concat(selected.toLowerCase().split(' ').join('-'))} className=\"link-cheeses\">\r\n          {'Search'}\r\n        </Link>\r\n        \r\n    </div>\r\n    </div>\r\n\r\n\r\n    <div className=\"cheeses-div\">     \r\n      {cheeses.map( cheese => (\r\n                <div id={cheese.name.toLowerCase().split(' ').join('-')}>\r\n                  {\r\n                    (letter !== cheese.name.substring(0,1)) &&  \r\n                    (letter = cheese.name.substring(0,1) ) &&                                       \r\n                    <p className=\"p-letter\" id={letter}> \r\n                       {letter}\r\n                    </p>    \r\n                  }                \r\n                <CheeseCard \r\n                  name={cheese.name}\r\n                  description={cheese.description}\r\n                  image={cheese.image}\r\n                />\r\n               </div>\r\n                )\r\n      \r\n      )}\r\n    </div>\r\n    </div>\r\n\r\n    <footer>\r\n        <h1>I would rather lose myself in passion than lose my passion</h1>\r\n        <h3>Jacques Mayol</h3>\r\n        <p>Last Update: 25th January 2021 </p>\r\n    </footer>   {/* <!-- ********* End of footer ************** --> */}\r\n    </div>\r\n    </div>\r\n     </>\r\n  ); \r\n\r\n};\r\n \r\n\r\n\r\nconst CheeseCard = props => {\r\n  const [show, setShow] = React.useState(false);\r\n    return(\r\n      <div>\r\n       <div className=\"div-button\">    \r\n       <button className=\"button-name\"\r\n       onClick={() => {setShow(!show)}}>\r\n        <p className=\"p-name\"> {props.name} </p>\r\n     </button>\r\n     </div>\r\n     \r\n    {show &&\r\n      <div className=\"div-description\">\r\n        <div>\r\n          <img className=\"cheese-img\" src={props.image} onError={(e)=>{e.target.onerror = null; e.target.src=cheeseImg; e.target.alt=\"Not actual image of cheese\"}} alt={props.name}/>\r\n        </div>\r\n        <p className=\"p-description\">{props.description}</p>\r\n      </div>\r\n    }\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n    <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}